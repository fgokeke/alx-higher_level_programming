================================
How to use 2-matrix-divided.py
================================

This module defines a matrix division function "matrix_divided(matrix, div)".

Usage
=======

"matrix_divided(...)" returns a new matrics that is a copy of the
argument "matrix" with all elements divided by "div".




Dividing integer matrix by integer divisor
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [
... [9, 12, 15],
... [18, 21, 24]
... ]
>>> print(matrix_divided(matrix, 3))
[[3.0, 4.0, 5.0], [6.0, 7.0, 8.0]]




The results are rounded to a maximum of two decimal places
>>> matrix = [
... [3, 4, 5],
... [6, 7, 8]
... ]
>>> print(matrix_divided(matrix, 3))
[[1.0, 1.33, 1.67], [2.0, 2.33, 2.67]]
>>> print(matrix)
[[3, 4, 5], [6, 7, 8]]




Dividing floating point numbers
>>> matrix = [
... [2.1, 3.3, -4.1],
... [3.3, -2.1, 4.1]
... ]
>>> print(matrix_divided(matrix, 3))
[[0.7, 1.1, -1.37], [1.1, -0.7, 1.37]]


Dividing combination of floats and integers
>>> matrix = [
... [3, 2.1, -9.999],
... [12, 15, 9.00]
... ]
>>> print(matrix_divided(matrix, 3))
[[1.0, 0.7, -3.33], [4.0, 5.0, 3.0]]



Matrices that are invalid
=================================

Matrix is a string
(should raise a TypeError)
>>> matrix = "not list"
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats





Matrix is None
(should raise a TypeError)
>>> matrix = None
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats




Matrix is an empty list
(should raise a TypeError)
>>> matrix = []
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats



Matrix is just a list
(should raise a TypeError)
>>> matrix = [3, 4, 5]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats




Matrix is an empty list of lists
>>> matrix = [[]]
>>> print(matrix_divided(matrix, 3))
[[]]




Matrices with elements that are neither ints nor floats
(should raise a TypeError)
>>> matrix = [
... [3, 4, 6],
... [1, 4, "fear"]
... ]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats




Matrices with rows of different sizes
(should raise a TypeError)
>>> matrix = [
... [3, 4, 6, 8],
... [1, 4, 5]
... ]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size





Divisors of invalid type
===========================

Divisor is a string
(should raise a TypeError)
>>> matrix = [
... [3, 2.1, -9.999],
... [12, 15, 9.00]
... ]
>>> print(matrix_divided(matrix, "fear"))
Traceback (most recent call last):
TypeError: div must be a number





Divisor is None
(should raise a TypeError)
>>> print(matrix_divided(matrix, None))
Traceback (most recent call last):
TypeError: div must be a number





Divisor is zero
(should raise a ZeroDivisionError)
>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
ZeroDivisionError: division by zero
